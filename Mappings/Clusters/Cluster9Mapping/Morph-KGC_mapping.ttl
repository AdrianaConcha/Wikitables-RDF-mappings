@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix ex: <http://example.com/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rml: <http://w3id.org/rml/> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix morph-kgc: <https://github.com/morph-kgc/morph-kgc/function/built-in.ttl#> .
@prefix grel: <http://users.ugent.be/~bjdmeest/function/grel.ttl#> .
@prefix idlab-fn: <http://example.com/idlab/function/> .
@prefix wd: <http://www.wikidata.org/entity/>.
@prefix wds: <http://www.wikidata.org/entity/statement/>.
@prefix wdv: <http://www.wikidata.org/value/>.
@prefix wdt: <http://www.wikidata.org/prop/direct/>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix transit: <http://vocab.org/transit/terms/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix wgs84_pos: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix p: <http://www.wikidata.org/prop/>.
@prefix ps: <http://www.wikidata.org/prop/statement/>.
@prefix psv: <http://www.wikidata.org/prop/statement/value/>.
@prefix pq: <http://www.wikidata.org/prop/qualifier/>.
@prefix wikibase: <http://wikiba.se/ontology#>.

@base <http://example.com/base/> .

<#Cluster9Mapping> a rr:TriplesMap;
  rml:logicalSource [
  	rml:query """
	SELECT 
		CASE 
        		WHEN TRIM(l) IS NOT NULL 
				THEN (TRY_CAST(SPLIT_PART(l, ':', 1) AS DECIMAL) * 60 + TRY_CAST(SPLIT_PART(l, ':', 2) AS DECIMAL))
        			ELSE NULL 
    	END AS 'lengthSeconds', first, ArticleEntity, WriterIDtrim
	FROM (
		SELECT  WriterIDtrim, first, ArticleEntity, REGEXP_REPLACE(l1, REGEXP_REPLACE(l1, '[0-9]+:[0-9]{2}', '', 'ig') , '', 'ig') as 'l', l1

		FROM (
			SELECT split_part(TitleID, ',' , 1) as first, ArticleEntity, regexp_replace(WriterID, '[[:space:]]*','', 'ig') AS WriterIDtrim, REGEXP_REPLACE(length, '[^0-9:]', '', 'ig') as 'l1'
			FROM '../Input/cluster9.csv' 
		)b
	) a

	""" 

  ];
  rr:subjectMap [
    rr:template "http://www.wikidata.org/entity/{first}";
   
  ];

  rr:predicateObjectMap [
    rr:predicate wdt:P31;
    rr:objectMap [
	rr:constant wd:Q105543609
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate wdt:P361;
    rr:objectMap [
	 rr:template "http://www.wikidata.org/entity/{ArticleEntity}"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate wdt:P7937;
    rr:objectMap [
	rr:constant wd:Q7366
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate wdt:P2047;
    rr:objectMap [
	rml:reference "lengthSeconds";
	rr:datatype xsd:decimal
    ]
  ];

  rr:predicateObjectMap [
	rr:predicate p:P2047;
	rr:objectMap [
		rr:termType rr:BlankNode ;
		rr:template "_:source{ArticleEntity}{first}{lengthSeconds}"
	]
  ];
  rr:predicateObjectMap [
	rr:predicate wdt:P676;
	rr:objectMap [
	    rml:functionExecution <#Execution> ;
	    rml:termType rml:IRI
	]
  ].



<#Duration> a rr:TriplesMap;
	rml:logicalSource [
  	rml:query """
		SELECT 
	CASE 
        WHEN TRIM(l) IS NOT NULL THEN (TRY_CAST(SPLIT_PART(l, ':', 1) AS DECIMAL) * 60 + TRY_CAST(SPLIT_PART(l, ':', 2) AS DECIMAL))
        ELSE NULL 
    	END AS 'lengthSeconds', first, ArticleEntity
	FROM (
		SELECT  first, ArticleEntity, REGEXP_REPLACE(l1, REGEXP_REPLACE(l1, '[0-9]+:[0-9]{2}', '', 'ig') , '', 'ig') as 'l', l1

		FROM (
			SELECT split_part(TitleID, ',' , 1) as first, ArticleEntity, REGEXP_REPLACE(length, '[^0-9:]', '', 'ig') as 'l1'
			FROM '../Input/cluster9.csv' 
		)b
	) a
	
	""" 
	];
	rr:subjectMap [
		rr:termType rr:BlankNode;
		rr:template "_:source{ArticleEntity}{first}{lengthSeconds}"
	];
	rr:predicateObjectMap [
		rr:predicate ps:P2047;
		rr:objectMap [
			rml:reference "lengthSeconds";
			rr:datatype xsd:decimal
		]
	];
	rr:predicateObjectMap [
		rr:predicate psv:P2047;
		rr:objectMap [
			rr:termType rr:BlankNode ;
			rr:template "_:source{ArticleEntity}{first}{lengthSeconds}b1"
		]
	].


<#b1> a rr:TriplesMap;
	rml:logicalSource [
  	rml:query """

		SELECT 
	CASE 
        WHEN TRIM(l) IS NOT NULL THEN (TRY_CAST(SPLIT_PART(l, ':', 1) AS DECIMAL) * 60 + TRY_CAST(SPLIT_PART(l, ':', 2) AS DECIMAL))
        ELSE NULL 
    	END AS 'lengthSeconds', first, ArticleEntity
	FROM (
		SELECT  first, ArticleEntity, REGEXP_REPLACE(l1, REGEXP_REPLACE(l1, '[0-9]+:[0-9]{2}', '', 'ig') , '', 'ig') as 'l', l1

		FROM (
			SELECT split_part(TitleID, ',' , 1) as first, ArticleEntity, REGEXP_REPLACE(length, '[^0-9:]', '', 'ig') as 'l1'
			FROM '../Input/cluster9.csv' 
		)b
	) a
	
	""" 
	];
	rr:subjectMap [
		rr:termType rr:BlankNode;
		rr:template "_:source{ArticleEntity}{first}{lengthSeconds}b1"
	];
	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [
			rr:constant wikibase:QuantityValue
		]
	];

	rr:predicateObjectMap [
		rr:predicate wikibase:quantityAmount;
		rr:objectMap [
			rml:reference "lengthSeconds";
			rr:datatype xsd:decimal
		]
	];

	rr:predicateObjectMap [
		rr:predicate wikibase:quantityUnit;
		rr:objectMap [
			rr:constant wd:Q11574
		]
	];


	rr:predicateObjectMap [
		rr:predicate wikibase:quantityNormalized;
		rr:objectMap [
			rr:parentTriplesMap <#b1>
		]
	].

<#Album> a rr:TriplesMap;
  rml:logicalSource [
  	rml:query """

	SELECT REGEXP_REPLACE(no, '[^0-9]', '', 'ig') as 'number', split_part(TitleID, ',' , 1) as first, ArticleEntity

	FROM '../Input/cluster9.csv' 
	
	""" 
  ];
  rr:subjectMap [
    rr:template "http://www.wikidata.org/entity/{ArticleEntity}";
   
  ];

  rr:predicateObjectMap [
    rr:predicate wdt:P31;
    rr:objectMap [
	rr:constant wd:Q482994
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate  wdt:P658;
    rr:objectMap [
	 rr:template "http://www.wikidata.org/entity/{first}"
    ]
  ];

rr:predicateObjectMap [
	rr:predicate p:P658;
	rr:objectMap [
		rr:termType rr:BlankNode ;
		rr:template "_:source{ArticleEntity}{first}{number}"
	]
].

<#Tracklist> a rr:TriplesMap;
	rml:logicalSource [
  	rml:query """

	SELECT REGEXP_REPLACE(no, '[^0-9]', '', 'ig') as 'number', split_part(TitleID, ',' , 1) as first, ArticleEntity

	FROM '../Input/cluster9.csv' 
	
	""" 
	];
	rr:subjectMap [
		rr:termType rr:BlankNode;
		rr:template "_:source{ArticleEntity}{first}{number}"
	];
	rr:predicateObjectMap [
		rr:predicate ps:P658;
		rr:objectMap [
			rr:template "http://www.wikidata.org/entity/{first}"
		]
	];
	rr:predicateObjectMap [
		rr:predicate pq:P1545;
		rr:objectMap [
			rml:reference "number"
		]
	].	


<Writer>
    rml:logicalSource [
	rml:query """
	SELECT  regexp_replace(WriterID, '[[:space:]]*','', 'ig')  AS WriterIDtrim
	FROM '../Input/cluster9.csv' 
	""" 
    ];
    rml:subjectMap [

            rml:functionExecution <#Execution> ;
	    rml:termType rml:IRI

    ];
    rml:predicateObjectMap [
        rml:predicate wdt:P106;
        rml:objectMap [
            rr:constant wd:Q753110
        ]
    ]  .

<#Execution>
    rml:function morph-kgc:string_split_explode ;
    rml:input
        [
            rml:parameter grel:valueParam ;
            rml:inputValueMap [
                rml:functionExecution <#Execution2> ;
                rml:return grel:stringOut
            ]
        ] ,
        [
            rml:parameter grel:param_string_sep ;
            rml:inputValue ","
        ] .


<#Execution2> a rml:Execution ;
    rml:function grel:string_replace ;
    rml:input
        [
            a rml:Input ;
            rml:parameter grel:valueParam ;
            rml:inputValueMap [
                rml:template "http://www.wikidata.org/entity/{WriterIDtrim}"
            ]
        ] ,
        [
            a rml:Input ;
            rml:parameter grel:param_find ;
            rml:inputValue ","
        ] ,
        [
            a rml:Input ;
            rml:parameter grel:param_replace  ;
            rml:inputValue ",http://www.wikidata.org/entity/"
        ] .
